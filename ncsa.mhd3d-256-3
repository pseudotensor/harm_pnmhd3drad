#!/bin/csh
#BSUB -q lt_lj        # Submit job to 128_ded_short queue
#BSUB -M 4000m            # Specify Xm megabytes of physical memory
#BSUB -n 64               # Specify x threads/processes
#BSUB -c 25600:0          # Specify job CPU limit of x:yy , x hours yy minutes
#BSUB -W 400:00             # specify minutes of job
#BSUB -P tro            # Charge job to project xxx (recommended for users
#BSUB -o mhd3d-256-3.o         # Store the standard output and standard error of the
#BSUB -N                # Send mail when job terminates (optional)
#BSUB -J mhd3d-256-3           # Specify job name (optional)
# End of embedded BSUB options
#
setenv MP_SET_NUMTHREADS $BSUB_NUMTHREADS  #Sets the number of threads to
                                           # number specified in #BSUB -n;
                                           # default is 1.
cd $SCR                                # Change to machine-local scratch
                                       # directory (scratch-<machine_name>)

msscmd -b "tar cf mhd3d-256-3.tar *"  # after job is done, tar the
                                                 # test.output* files and put 
                                                 # the resulting file named 
                                                 # test.output.tar in UniTree.
                                                 # It is important to issue this
                                                 # command after changing to the
                                                 # $SCR directory, and before 
                                                 # the executable begins.
           # files must be stored using msscmd put <file> first
msscmd get mhd3d-256-3
msscmd get bindir.tar.gz
gunzip -f bindir.tar.gz
tar xvf bindir.tar
                                        # from directory test in UniTree
chmod u+x ./mhd3d-256-3                         # Since UniTree gives you the same
                                        # permissions as what your umask is
                                        # set to (generally only read and
                                        # write), you need to give yourself
                                        # executable permission to run a.out
#mpirun -np $BSUB_NUMTHREADS ./twod
# to run perfex to get MFLOPS or timing on functions, do:
# echo "perfex -y ./twod & time.out" > ./time.scr
# echo "perfex -a -x -y ./twod & x.out" > ./time.scr
# chmod u+x ./time.scr
# mpirun -np $BSUB_NUMTHREADS ./time.scr
# then use ssrun -fpcsamp ./twod
# MPI: mpirun -np $BSUB_NUMTHREADS ssrun -fpcsamp ./twod
#
#
#mpirun -np $BSUB_NUMTHREADS ssrun -fpcsamp ./twod64long2
#
#
# prof () or prof -gprof () where () is file generated by ssrun.
#
# other ssrun options, see ncsa.
#./twod
#./perftest > 0_o.out
#
#
mpirun -np $BSUB_NUMTHREADS ./mhd3d-256-3
#
#
#/usr/apps/MessPass/mpich/bin/mpirun -np $BSUB_NUMTHREADS ./perftest
#/usr/apps/MessPass/mpich/bin/mpirun -np $BSUB_NUMTHREADS ./twod
busage $LSB_JOBID           # appends job usage report to the end of the job
                             # standard output file.

